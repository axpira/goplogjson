on: [push, pull_request]
name: Test
jobs:
  test:
    strategy:
      matrix:
        go-version: [1.15.x, 1.16.x, 1.17.x]
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: ${{ matrix.go-version }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Test
      run: go test ./...

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.17
    - name: Go fmt
      run: |
        unformatted=$(gofmt -l .)
        if [ ! -z "$unformatted" ]; then
          echo This files is not formatted $unformatted
          exit 1
        fi
    - name: Go report card
      run: curl -X POST -F "repo=github.com/axpira/goplogadapter" https://goreportcard.com/checks
    - name: Coverage Test
      run: |
        mkdir -p dist
        go test -coverprofile=dist/coverage.out ./...
    - name: Codecov
      uses: codecov/codecov-action@v1
      with:
        fail_ci_if_error: true
